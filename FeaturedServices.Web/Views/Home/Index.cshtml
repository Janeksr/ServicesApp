@using ReflectionIT.Mvc.Paging
@model PagingList<CompanyExposeVM>
@addTagHelper *, ReflectionIT.Mvc.Paging

@{
    ViewData["Title"] = "Home";
}

<div class="categories">
    <div>asasda</div>
    <div>asasda</div>
    <div>asasda</div>
    <div>asasda</div>
    <div>asasda</div>
    <div>asasda</div>
    <div>asasda</div>
    <div>asasda</div>
</div>

<nav aria-label="Suppliers navigation example">
    @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model })
</nav>
@*<div class="row">
    <div class="col-3"></div>
    <div class="col-6">
    <form class="w-100">
    <input class="w-75" type="text" placeholder="Search..">
    <button type="submit"><i class="fa-solid fa-magnifying-glass"></i></button>
    </form>
    </div>
    <div class="col-3"></div>
    </div>*@


@await Html.PartialAsync("_CompanyModel", Model)



<nav aria-label="Suppliers navigation example">
    <vc:pager paging-list="@Model"></vc:pager>
</nav>


@section Scripts{
<script type="text/javascript">

    const URL = 'https://localhost:7030/api/CompanyTypes';
    const categories = document.querySelector('.categories');



    async function getData(url) {
        const response = await fetch(url, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
            }
        }).catch((error) => {
            console.log(error, 'Error: ')
        });
        const data = await response.json();

        data.forEach(item => {
            const newDiv = document.createElement('div');
            const newCategory = document.createTextNode(item.name);
            newDiv.appendChild(newCategory);

            categories.appendChild(newDiv);

            console.log(item);
        });
    }

    //getData(URL);


    $(document).ready(function(){

        $.fn.myFunc = function(){

                $('.categories').slick({
                    slidesToShow: 3,
                    slidesToScroll: 1,
                    autoplay: true,
                    autoplaySpeed: 2000,
                    arrows: false
                );
        }
    }

    myFunc();
    setTimeout();


      
</script>
}