@model CompanyPanelVM

@{
    ViewData["Title"] = "View";
}

<h1>@Model.companyVM.Name Company</h1>

<span class="text-danger">@Html.ValidationMessage("CustomError")</span>

<div class="row">
    <hr />
    <div class="col-6">
        <dl class="row border">
            <dt class="col-sm-5">
                @Html.DisplayNameFor(model => model.companyVM.Name)
            </dt>
            <dd class="col-sm-7">
                @Html.DisplayFor(model => model.companyVM.Name)
            </dd>
            <dt class="col-sm-5">
                @Html.DisplayNameFor(model => model.companyVM.City)
            </dt>
            <dd class="col-sm-7">
                @Html.DisplayFor(model => model.companyVM.City)
            </dd>
            <dt class="col-sm-5">
                @Html.DisplayNameFor(model => model.companyVM.ZipCode)
            </dt>
            <dd class="col-sm-7">
                @Html.DisplayFor(model => model.companyVM.ZipCode)
            </dd>
            <dt class="col-sm-5">
                @Html.DisplayNameFor(model => model.companyVM.StreetNameAndNumber)
            </dt>
            <dd class="col-sm-7">
                @Html.DisplayFor(model => model.companyVM.StreetNameAndNumber)
            </dd>
            <dt class="col-sm-5">
                @Html.DisplayNameFor(model => model.companyVM.PhoneNumber)
            </dt>
            <dd class="col-sm-7">
                @Html.DisplayFor(model => model.companyVM.PhoneNumber)
            </dd>
            <dt class="col-sm-5">
                @Html.DisplayNameFor(model => model.companyVM.Description)
            </dt>
            <dd class="col-sm-7">
                @Html.DisplayFor(model => model.companyVM.Description)
            </dd>
            <dt class="col-sm-5">
                @Html.DisplayNameFor(model => model.companyVM.OpeningHours)
            </dt>
            <dd class="col-sm-7">
                @Html.DisplayFor(model => model.companyVM.OpeningHours)
            </dd>
            <dt class="col-sm-5">
                @Html.DisplayNameFor(model => model.companyVM.ClosingHours)
            </dt>
            <dd class="col-sm-7">
                @Html.DisplayFor(model => model.companyVM.ClosingHours)
            </dd>
            <dt class="col-sm-5">
                @Html.DisplayNameFor(model => model.companyVM.CompanyType)
            </dt>
            <dd class="col-sm-7">
                @Html.DisplayFor(model => model.companyVM.CompanyType.Name)
            </dd>
            <a asp-action="Edit" asp-route-id="@Model.companyVM.Id" type="button" class="btn btn-primary">Edit @Model.companyVM.Name</a>

        </dl>
    </div>
    <div class="col-6">
        <h4>@Model.companyVM.Name Employee</h4>

        <table class="table workersTable w-100 border">
            <thead>
                <tr>
                    <th>
                        Name
                    </th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.workerVM)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Firstname)
                            @Html.DisplayFor(modelItem => item.Lastname)
                        </td>
                        <td>
                            <a class="btn btn-info btn-sm ms-3" asp-controller="WorkerService" asp-action="Assignment" asp-route-id="@item.Id">Assign Services</a>
                        </td>
                        <td class="w-25">
                            <a class="btn btn-warning btn-sm ms-3" asp-controller="Worker" asp-action="EditWorker" asp-route-id="@item.Id">Edit</a>
                            <button data-id="@item.Id" class="btn btn-danger deleteBtn ms-3 btn-sm" type="button"><i class="fas fa-trash-alt"></i></button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <p>To make your company visible, you need to add at least one employee as well as a service and a photo.</p>
    </div>
</div>
<div>
    <a asp-controller="Worker" asp-action="AddWorker" type="button" class="btn btn-sm btn-dark">Add Employee</a>
    <a class="btn btn-success btn-sm ms-2" asp-controller="Service" asp-action="AddService">Add Service</a>
    <a class="btn btn-secondary btn-sm ms-2" asp-controller="Service" asp-action="ListOfServices">Show Services</a>
</div>




<div class="row mt-5 ">
    <div class="col-md-4 border">
        @await Html.PartialAsync("_ImageModal", Model)
    </div>
</div>
<div class="row mt-5 ">
    <div class="col-md-4 border">
        <a asp-controller="Company" asp-action="PreviewCompany" type="button" class="btn btn-success">Preview</a>
    </div>
</div>

<form id="deleteForm" asp-controller="Worker" asp-action="DeleteWorker">
    <input type="hidden" id="workerId" name="Id" />
</form>

@section Scripts{
    <script>
        $(function() {
            $('.workersTable').DataTable({
                //"columns": [
                //         { "width": "80%" },
                //         { "width": "25%" }
                //],
                "dom": 'lrtip',
                "paging": false,
                "info": false
            });
            $('.deleteBtn').click(function(e) {
                swal({
                    title: "Are you sure?",
                    text: "Are you sure you want to delete this employee and his services?",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true
                }).then((confirm) => {
                    if (confirm) {
                        const btn = $(this);
                        const id = btn.data("id");
                        $('#workerId').val(id);
                        $('#deleteForm').submit();
                    }
                });
            });
        });
    </script>
}